package org.dongfu.study.allDesignMode.createMode.singleMode;
/**
 * @description: TODO
 * @author majiajian
 * @date 2022/8/11 15:07
 * @version 1.0
 */

/**
 * 单例模式
 */
public class doc {
//    1. 数据库的连接池不会反复创建
//    2. spring中⼀个单例模式bean的⽣成和使⽤
//    3. 在我们平常的代码中需要设置全局的的⼀些属性保存


//    单例模式的实现⽅式⽐较多，主要在实现上是否⽀持懒汉模式、是否线程安全中运⽤各项技巧。当然也
//    有⼀些场景不需要考虑懒加载也就是懒汉模式的情况，会直接使⽤ static 静态类或属性和⽅法的⽅式
//    进⾏处理，供外部调⽤



//    虽然只是⼀个很平常的单例模式，但在各种的实现上真的可以看到java的基本功的体现，这⾥包括
//    了；懒汉、饿汉、线程是否安全、静态类、内部类、加锁、串⾏化等等。
//    在平时的开发中如果可以确保此类是全局可⽤不需要做懒加载，那么直接创建并给外部调⽤即可。
//    但如果是很多的类，有些需要在⽤户触发⼀定的条件后(游戏关卡)才显示，那么⼀定要⽤懒加载。
//    线程的安全上可以按需选择。
//    建议在学习的过程中⼀定要加以实践，否则很难完完整整的掌握⼀整套的知识体系。例如案例中的
//    出现的 Effective Java ⼀书也⾮常建议⼤家阅读。另外推荐下这位⼤神的
//    Github：https://github.com/jbloch
}
