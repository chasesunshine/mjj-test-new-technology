package org.wanbang.study.allDesignMode.constructMode.bridgeMode;
/**
* @description: 桥接模式
* @author majiajian
* @date 2022/8/11 17:04
* @version 1.0
*/

/**
 * 桥接模式 : 桥接模式的主要作⽤就是通过将抽象部分与实现部分分离，把多种可匹配的使⽤进⾏组合。说⽩了核⼼
 *          实现也就是在A类中含有B类接⼝，通过构造函数传递B类的实现，这个B类就是设计的 桥 。
 */
public class doc {

//    通过模拟微信与⽀付宝两个⽀付渠道在不同的⽀付模式下， 刷脸 、 指纹 、 密码 ，的组合从⽽体现
//    了桥接模式的在这类场景中的合理运⽤。简化了代码的开发，给后续的需求迭代增加了很好的扩展
//    性。
//    从桥接模式的实现形式来看满⾜了单⼀职责和开闭原则，让每⼀部分内容都很清晰易于维护和拓
//    展，但如果我们是实现的⾼内聚的代码，那么就会很复杂。所以在选择᯿构代码的时候，需要考虑
//    好整体的设计，否则选不到合理的设计模式，将会让代码变得难以开发。
//    任何⼀种设计模式的选择和使⽤都应该遵顼符合场景为主，不要刻意使⽤。⽽且统⼀场景因为业务
//    的复杂从⽽可能需要使⽤到多种设计模式的组合，才能将代码设计的更加合理。但这种经验需要从
//    实际的项⽬中学习经验，并提不断的运⽤。



    // 个人理解：
    // 一个通用的 抽象类 Pay - 包含 一个通用的接口实现类
    // 两个 子类 继承 （WxPay、ZfbPay）一个通用的 抽象类 Pay 并执行业务
    // 执行业务过程中需要 校验 ， 用的是 父类的 Pay （ 一个通用的接口实现类 的校验代码）


}
