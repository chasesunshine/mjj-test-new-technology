package org.wanbang.study.allDesignMode.behaviorMode.visitorMode;
/**
* @description: 访问者模式
* @author majiajian
* @date 2022/8/25 13:30
* @version 1.0
*/

/**
 *
 * 访问者要解决的核⼼事项是，在⼀个稳定的数据结构下，例如⽤户信息、雇员信息等，增加易变的业务
 * 访问逻辑。为了增强扩展性，将这两部分的业务解耦的⼀种设计模式。
 * 说⽩了访问者模式的核⼼在于同⼀个事物不同视⻆下的访问信息不同，⽐如⼀个 美⼥ ⼿⾥拿个 冰激
 * 凌 。⼩朋友会注意冰激凌，⼤朋友会找⾃⼰喜欢的地⽅观测敌情
 *
 */
public class Doc {

    /**
     *
     * 在本案例中我们模拟校园中的学⽣和⽼师对于不同⽤户的访问视⻆
     * 这个案例场景我们模拟校园中有学⽣和⽼师两种身份的⽤户，那么对于家⻓和校⻓关⼼的⻆度来看，他
     * 们的视⻆是不同的。家⻓更关⼼孩⼦的成绩和⽼师的能⼒，校⻓更关⼼⽼师所在班级学⽣的⼈数和升学
     * 率{ 此处模拟的 }。
     * 那么这样 学⽣ 和 ⽼师 就是⼀个固定信息的内容，⽽想让不同视⻆的⽤户获取关⼼的信息，就⽐较适合
     * 使⽤观察者模式来实现，从⽽让实体与业务解耦，增强扩展性。但观察者模式的整体类结构相对复杂，
     * 需要梳理清楚再开发
     *
     * 访问者模式的类结构相对其他设计模式来说⽐较复杂，但这样的设计模式在我看来更加 烧⽓有魅⼒ ，它
     * 能阔开你对代码结构的新认知，⽤这样思维不断的建设出更好的代码架构。
     * 关于这个案例的核⼼逻辑实现，有以下⼏点；
     * 1. 建⽴⽤户抽象类和抽象访问⽅法，再由不同的⽤户实现；⽼师和学⽣。
     * 2. 建⽴访问者接⼝，⽤于不同⼈员的访问操作；校⻓和家⻓。
     * 3. 最终是对数据的看板建设，⽤于实现不同视⻆的访问结果输出。
     */
}
