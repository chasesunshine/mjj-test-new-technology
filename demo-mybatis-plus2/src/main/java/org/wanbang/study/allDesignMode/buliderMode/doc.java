package org.wanbang.study.allDesignMode.buliderMode;
/**
* @description: TODO
* @author majiajian
* @date 2022/8/11 13:31
* @version 1.0
*/

/**
 * 建造者模式 : 将⼀个复杂的构建与其表示相分离，使得同样的构建过程可以创建不同的表示
 */
public class doc {

//    通过上⾯对建造者模式的使⽤，已经可以摸索出⼀点⼼得。那就是什么时候会选择这样的设计模
//    式，当： ⼀些基本物料不会变，⽽其组合经常变化的时候 ，就可以选择这样的设计模式来构建代码。
//    此设计模式满⾜了单⼀职责原则以及可复⽤的技术、建造者独⽴、易扩展、便于控制细节⻛险。但
//    同时当出现特别多的物料以及很多的组合后，类的不断扩展也会造成难以维护的问题。但这种设计
//    结构模型可以把᯿复的内容抽象到数据库中，按照需要配置。这样就可以减少代码中⼤量的᯿复。
//    设计模式能带给你的是⼀些思想，但在平时的开发中怎么样清晰的提炼出符合此思路的建造模块，
//    是⽐较难的。需要经过⼀些锻炼和不断承接更多的项⽬，从⽽获得这部分经验。有的时候你的代码
//    写的好，往往是倒逼的，复杂的业务频繁的变化，不断的挑战


    // 个人理解
    // 一个 总体的 建造者 BUilder
    // 一个通用接口 IMenu
    // 一个实现类 DecorationPackageMenu - 有多个全局变量 按照 一定规则进行
    // 最后 DecorationPackageMenu 计算总体的规则

}
