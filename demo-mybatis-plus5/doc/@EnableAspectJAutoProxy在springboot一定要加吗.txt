# @EnableAspectJAutoProxy��springbootһ��Ҫ����
https://www.jianshu.com/p/88c98541c957

һ��Ч����ʾ
�������������ʾ��

ҵ���࣬

UserService.java

package com.my.template.service;

import com.my.template.entity.User;
import org.springframework.stereotype.Service;

/**
 * @date 2022/8/9 15:28
 */
@Service
public class UserService implements Us{
    @Override
    public void saveUser(User user){
        System.out.println("����user�������ݿ�:"+user);
    }
}
�����࣬

LogAspect.java

package com.my.template.aop;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

/**
 * @date 2022/8/11 14:12
 */
@Component
@Aspect
public class LogAspect {
    @Pointcut("execution(* com.my.template.service.UserService.*(..))")
    public void pointCut(){

    }
    @Before(value = "pointCut()")
    public void before(JoinPoint joinPoint){
        System.out.println("����ִ��ǰ-20220816");
    }

    @AfterReturning(value = "pointCut()")
    public void after(JoinPoint joinPoint){
        System.out.println("����ִ�к�-20220816");
    }
}
���Ե�controller

UserController.java

package com.my.template.controller;

import com.my.template.entity.User;
import com.my.template.service.Us;
import com.my.template.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * @date 2022/8/9 15:35
 */
@RestController
public class UserController {
    @Autowired
    private Us us;
    @RequestMapping("/saveUser")
    public String saveUser(){

        User user=new User();
        user.setId("1");
        user.setName("����");
        us.saveUser(user);
        return "success";
    }
}
sprinboot�������࣬

BootServer.java

package com.my.template;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.EnableAspectJAutoProxy;
import org.springframework.context.annotation.ImportResource;

/**
 * ������
 * @date 2022/6/3 21:32
 */
@SpringBootApplication()
public class BootServer {
    public static void main(String[] args) {
        try {
            SpringApplication.run(BootServer.class);
        }catch (Exception e){
            e.printStackTrace();
        }
    }
}
���Խ�����£�

2022-08-16 22:30:44.082  INFO 25716 --- [nio-9099-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
����ִ��ǰ-20220816
����user�������ݿ�:User{name='����', id='1'}
����ִ�к�-20220816
������Ĳ��Խ��������û�м�@EnableAspectJAutoProxyע�⣬����AOP��Ч�ˣ�����Ϊʲô��

����Ϊʲô����@EnableAspectJAutoProxy������Ч
��������������Ų��˺ܾã�������������ҵ���ԭ�򣬿���pom�ļ�

pom.xml

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>springTemplate</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>
    <dependencies>
        <!--spring-boot��web����-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.3.3.RELEASE</version>
        </dependency>
        <!--�Զ����starter-->
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>customer-spring-boot-starter</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!--ʹ��springAOP��Ҫ���������-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.13</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
����������spring-boot-starter-web���������������������������

������spring-boot-autoconfigure�������������Զ�װ���������Ҳ���ǻ��ȡ���µ�spring.factories�ļ����ڸ��ļ�������������ã�

û�������ΪAopAutoConfiguration������⡣���濴����ԭ��

����ԭ�����
Ҫ������ԭ�����Ǿ�Ҫ��AopAutoConfiguration����࿴�£�









�ȿ�ע�Ͱɣ�ע����˵AopAutoConfiguration��ͬ��@EnableAspectJAutoProxyע�⣬Ҳ���Ǹ���������ú�@EnableAspectJAutoProxy��һ���ģ��ٿ������ϵ�ע�⣬�ص㿴@ConditionalOPropertyע���е����ݣ���˼������������ļ����С�spring.aop.auto�������ã����������Ϊtrue�������������Ϊfalse�������ҵ������ļ�����û�и�������ģ�

server.port=9099
spring.datasource.type=com.mysql.cj.jdbc.MysqlDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource..driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=yh_dev
spring.datasource..password=DvpJe2x
spring.datasource.url=jdbc:mysql://10.0.0.37:3306/channel_center
#?????
my.customer.name=hello
my.customer.code=autoconfiguration
��ô���������Ӹ����ã�������Ϊfalse��

server.port=9099
spring.datasource.type=com.mysql.cj.jdbc.MysqlDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource..driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=yh_dev
spring.datasource..password=DvpJe2x
spring.datasource.url=jdbc:mysql://10.0.0.37:3306/channel_center
#?????
my.customer.name=hello
my.customer.code=autoconfiguration
spring.aop.auto=false
��������֮�󣬿����Խ����






�Ӳ��Խ�����Կ���springAOPû�������ã��������������ϼ���@EnableAspectJAutoProxyע�⣬���²��Խ��












������Ĳ��Խ�����Կ����������@EnableAspectJAutoProxyע��springAOP��Ч�ˡ�

���ϣ���springboot�����£����ڴ���spring-boot-autoconfigure������Ĭ�ϻ�ע��AopAutoConfiguration�����࣬��������õ�ͬ��@EnableAspectJAutoProxyע�⣬��������������¿��Բ���@EnableAspectJAutoProxyע�⣬AopAutoConfiguration����ͨ��spring.aop.auto���Կ��ƣ�

�ġ��ܽ�
������Ҫ��������springboot�����£�����@EnableAspectJAutoProxyע��springAOP��Ȼ��Ч�����⡣Ϊ�˱����ڼ���һ�ɼ���@EnableAspetJAutoProxyע�⡣

AopAutoConfiguration���ͬ��@EnableAspectJAutoProxyע�⣻
spring.aop.auto=ture/false���Կ��Կ���AopAutoConfiguration���Ƿ���Ч��
��̬��������ʹ��AOP��
